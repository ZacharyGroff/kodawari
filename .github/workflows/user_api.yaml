name: user_api test
run-name: ${{ github.actor }} is testing user_api
on:
  pull_request:
    paths: 
      - py/projects/user_api/**
  push:
    branches:
      - "main"
    paths:
      - py/projects/user_api/**

env:
  KODAWARI_SECRET_KEY: my-test-key
  CASSANDRA_CLUSTER_NAME: cassandra-ci
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.1"]
    steps:
      - uses: actions/checkout@v3
      - uses: KengoTODA/actions-setup-docker-compose@v1
        if: ${{ env.ACT }}
        name: Install `docker-compose` for local simulations
        with:
          version: '2.14.2'
      - name: Build stack
        run: docker-compose build user_api && docker-compose up -d user_api 
        working-directory: tools/docker
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install latest version of Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Add Poetry to path
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction
        working-directory: py/projects/user_api
      - name: Test - Source code is sorted (ssort)
        run: poetry run ssort --check
        working-directory: py/projects/user_api
      - name: Test - Imports are sorted (isort)
        run: poetry run isort **/*.py -c -v --profile=black
        working-directory: py/projects/user_api
      - name: Test - Source code is linted (black)
        run: poetry run black --check .
        working-directory: py/projects/user_api
      - name: Test - Docstrings are properly formatted according to google standard (darglint)
        run: poetry run darglint -s google -z full
        working-directory: py/projects/user_api
      - name: Test - Static type check (pyright)
        run: poetry run pyright --warnings
        working-directory: py/projects/user_api
      - name: Test with pytest
        run: poetry run pytest
        working-directory: py/projects/user_api
      - name: Tear down stack
        run: docker-compose down 
        working-directory: tools/docker

